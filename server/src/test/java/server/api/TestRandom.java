package server.api;

import java.util.Arrays;
import java.util.random.RandomGenerator;
import java.util.stream.IntStream;

public class TestRandom implements RandomGenerator {

    private int offset = 0;

    /**
     * Returns a sequentially chosen {@code long} value.
     *
     * @return a sequentially chosen {@code long} value
     */
    @Override
    public long nextLong() {
        return offset;
    }

    /**
     * Fills a user-supplied byte array with generated byte values
     * sequentially chosen uniformly from 0
     *
     * @param bytes the byte array to fill with pseudorandom bytes
     * @throws NullPointerException if bytes is null
     */
    @Override
    public void nextBytes(byte[] bytes) {
        for (int i = 0; i < bytes.length; i++) {
            bytes[i] = (byte)offset++;
        }
        System.out.println(Arrays.toString(bytes));
    }

    /**
     * Returns an effectively unlimited stream of sequentially chosen
     * {@code int} values between a and b
     *
     * @param a lower bound
     * @param b upper bound
     * @return a stream of sequentially chosen {@code int} values
     */
    @Override
    public IntStream ints(int a, int b) {
        return IntStream.generate(() -> (offset++% (b-a) + a));
    }
}
